upstream backend {
    # Active pool based on ACTIVE_POOL env variable
    server ${BLUE_UPSTREAM} max_fails=1 fail_timeout=5s ${BLUE_ROLE};
    server ${GREEN_UPSTREAM} max_fails=1 fail_timeout=5s ${GREEN_ROLE};
    
    # Keep connections alive
    keepalive 32;
}

server {
    listen 80;
    server_name _;

    # Increase buffer sizes for headers
    proxy_buffer_size 16k;
    proxy_buffers 4 16k;
    proxy_busy_buffers_size 32k;

    location / {
        # Tight timeouts for fast failover
        proxy_connect_timeout 2s;
        proxy_send_timeout 2s;
        proxy_read_timeout 2s;

        # Retry on errors, timeouts, and 5xx responses
        proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 2;
        proxy_next_upstream_timeout 5s;

        # Forward to backend
        proxy_pass http://backend;
        
        # Preserve original headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # HTTP 1.1 for keepalive
        proxy_http_version 1.1;
        proxy_set_header Connection "";

        # Don't buffer responses for faster failover detection
        proxy_buffering off;

        # Pass through all upstream headers (including X-App-Pool and X-Release-Id)
        proxy_pass_header X-App-Pool;
        proxy_pass_header X-Release-Id;
        
        # Hide nginx version
        proxy_hide_header X-Powered-By;
    }

    # Health check endpoint (optional, for monitoring)
    location /nginx-health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}