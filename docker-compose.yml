version: "3.8"

services:
  nginx:
    image: nginx:alpine
    container_name: nginx_proxy
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      app_blue:
        condition: service_healthy
      app_green:
        condition: service_healthy
    networks:
      - app_network
    restart: unless-stopped

  app_blue:
    image: ${BLUE_IMAGE}
    container_name: app_blue
    ports:
      - "8081:${PORT:-3000}"
    environment:
      - APP_POOL=blue
      - RELEASE_ID=${RELEASE_ID_BLUE}
      - PORT=${PORT:-3000}
    networks:
      - app_network
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--quiet",
          "--tries=1",
          "--spider",
          "http://localhost:${PORT:-3000}/healthz",
        ]
      interval: 3s
      timeout: 2s
      retries: 3
      start_period: 2s
    restart: unless-stopped

  app_green:
    image: ${GREEN_IMAGE}
    container_name: app_green
    ports:
      - "8082:${PORT:-3000}"
    environment:
      - APP_POOL=green
      - RELEASE_ID=${RELEASE_ID_GREEN}
      - PORT=${PORT:-3000}
    networks:
      - app_network
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--quiet",
          "--tries=1",
          "--spider",
          "http://localhost:${PORT:-3000}/healthz",
        ]
      interval: 3s
      timeout: 2s
      retries: 3
      start_period: 2s
    restart: unless-stopped

  alert_watcher:
    image: python:3.11-slim
    container_name: alert_watcher
    volumes:
      - nginx_logs:/var/log/nginx:ro
      - ./watcher.py:/app/watcher.py:ro
    working_dir: /app
    command: >
      sh -c "pip install --no-cache-dir requests && python -u watcher.py"
    environment:
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL:-}
      - ACTIVE_POOL=${ACTIVE_POOL:-blue}
      - ERROR_RATE_THRESHOLD=${ERROR_RATE_THRESHOLD:-2}
      - WINDOW_SIZE=${WINDOW_SIZE:-200}
      - ALERT_COOLDOWN_SEC=${ALERT_COOLDOWN_SEC:-300}
      - MAINTENANCE_MODE=${MAINTENANCE_MODE:-false}
    depends_on:
      - nginx
    networks:
      - app_network
    restart: unless-stopped

networks:
  app_network:
    driver: bridge

volumes:
  nginx_logs:
